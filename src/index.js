import os from 'os';
import clipboardy from 'clipboardy';
import { editor } from '@inquirer/prompts';

async function standupCli(templateConfig) {
  const GENERATED_BY = '(generated by standup-cli)';

  try {
    const answers = {};

    // Process each question sequentially
    for (const [key, config] of Object.entries(templateConfig)) {
      const answer = await editor({
        message: config.message + os.EOL,
        default: config.defaultAnswer || '',
      });
      answers[key] = answer;
    }

    // Format the output
    const formattedOutput = Object.keys(answers)
      .reduce((prev, item) => {
        return prev + templateConfig[item].message + os.EOL + answers[item] + os.EOL;
      }, '')
      .trim() + os.EOL +  os.EOL + GENERATED_BY;

    await clipboardy.write(formattedOutput);
    console.log('‚úÖ Standup copied to clipboard!');
    process.exit(0);

  } catch (error) {
    if (error.name === 'ExitPromptError') {
      console.log('üëã Goodbye!');
      process.exit(0);
    }
    console.error('‚ùå Error:', error.message);
    process.exit(1);
  }
}

export default standupCli;
